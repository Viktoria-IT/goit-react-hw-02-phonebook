{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","index.js","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactForm","state","name","number","handleSubmit","e","preventDefault","props","onSubmit","setState","handleChange","currentTarget","value","this","className","css","form","label","type","pattern","title","required","onChange","submit","Component","ContactList","contacts","onDeleteContact","allContacts","map","contact","delete","onClick","id","Filter","filter","App","addContact","normalizedName","toLowerCase","includes","length","Notiflix","Report","warning","shortid","generate","deleteContact","contactId","prevState","changeFilter","normalizedFilter","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d072f13a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2FV3f\",\"submit\":\"ContactForm_submit__2hhrj\",\"label\":\"ContactForm_label__1qBUc\"};","import { Component } from 'react';\nimport css from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    state = {\n        name: '',\n        number: ''\n    }\n\n    handleSubmit = e => {\n        e.preventDefault();\n        this.props.onSubmit(this.state.name, this.state.number);\n        this.setState({ name: '' });\n        this.setState({ number: '' });\n    }\n\n    handleChange = e => {\n        this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n    };\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} className={css.form}>\n                <label className={ css.label}>\n            Name\n            <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            />\n\n            </label>\n                \n            <label className={ css.label}>\n                Number\n                <input\n                type=\"tel\"\n                name=\"number\"\n                value={this.state.number}\n                pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n                required\n                onChange={this.handleChange}\n                />\n\n            </label>\n\n                <button type=\"submit\" className={css.submit}>Add name</button>\n        </form>\n        )\n    }\n}\n\nexport default ContactForm","import css from './ContactList.module.css';\nimport PropTypes from 'prop-types'\n\nfunction ContactList({ contacts, onDeleteContact }) {\n\n    return (\n        <ul className={ css.allContacts}>\n            {contacts.map(contact => (\n                <li key={contact.id} className={css.contact}>\n                    <span>{contact.name}: {contact.number}</span>\n                    <button className={css.delete} type=\"button\" onClick={()=> onDeleteContact(contact.id)}>Delete</button>\n                </li>))}\n        </ul>\n    )\n}\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(PropTypes.exact({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired\n    })).isRequired,\n    onDeleteContact: PropTypes.func.isRequired\n}\n\nexport default ContactList\n","import PropTypes from 'prop-types'\n\nfunction Filter({ onChange, filter }) {\n    return (\n        <label>\n            Filter by name:\n            <input type=\"text\" value={filter} onChange={onChange}></input>\n        </label>\n    )\n}\n\nFilter.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    filter: PropTypes.string.isRequired\n}\n\nexport default Filter","import { Component } from \"react\";\nimport \"./App.css\";\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\nimport shortid from \"shortid\";\nimport ContactList from \"./Components/ContactList/ContactList\";\nimport Filter from \"./Components/Filter/Filter\";\nimport Notiflix from \"notiflix\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    const normalizedName = name.toLowerCase();\n    const doubledNames = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedName)\n    ).length;\n    if (!doubledNames) {\n      const contact = {\n        id: shortid.generate(),\n        name: name,\n        number: number,\n      };\n      this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n    } else {\n      Notiflix.Report.warning(\n        \"Warning\",\n        `${name} is already in contacts`,\n        \"OK\"\n      );\n    }\n  };\n\n  deleteContact = (contactId) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter(\n        (contact) => contact.id !== contactId\n      ),\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  render() {\n    const normalizedFilter = this.state.filter.toLowerCase();\n    const visibleContacts = this.state.contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm\n          name={this.name}\n          number={this.number}\n          onSubmit={this.addContact}\n        />\n\n        <h2>Contacts</h2>\n        <Filter onChange={this.changeFilter} value={this.state.filter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"allContacts\":\"ContactList_allContacts__T8NDO\",\"contact\":\"ContactList_contact__2djA0\",\"delete\":\"ContactList_delete__3dnAm\"};"],"sourceRoot":""}